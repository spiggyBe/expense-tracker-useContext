{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","totalBalance","useContext","map","el","amount","reduce","prev","next","toFixed","IncomeExpenses","amounts","income","item","acc","expenses","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","placeholder","onChange","target","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.4175173d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n\r\n\r\n    return (\r\n        <h2>Expense Tracker</h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\n//initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    //actions\r\n    const deleteTransaction = id => {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        })\r\n    }\r\n    const addTransaction = transaction => {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(el => el.amount)\r\n\r\n    const totalBalance = amounts.reduce((prev, next) => (prev += next), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >${totalBalance}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0).toFixed(2)\r\n\r\n    const expenses = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1).toFixed(2)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">{expenses}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext)\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+'\r\n\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text}\r\n            <span>{sign}${Math.abs(transaction.amount)}</span> {/* Math.abs daje zawsze pozytywne liczby poniewaz bez tej funkcji bylby podw√≥jny minus przed wartoscia */}\r\n            <button className='delete-btn' onClick={() => deleteTransaction(transaction.id)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n/*\r\nexport const Transaction = (props) => { zdestrukturyzowac propsy --> efekt powyzej\r\n\r\n\r\n\r\n    return (\r\n        <li className='minus'>\r\n            {props.transaction.text}\r\n            <span>{props.transaction.amount}</span>\r\n            <button>x</button>\r\n        </li>\r\n    )\r\n} */\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext) //destrukturyzacja \r\n\r\n    //console.log(context)\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(el => <Transaction key={el.id} transaction={el} />)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n\r\n    const { addTransaction } = useContext(GlobalContext)\r\n\r\n    const typeText = e => {\r\n        setText(e.target.value)\r\n    }\r\n    const typeAmount = e => {\r\n        setAmount(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 987654321),\r\n            text,\r\n            amount: +amount //parsuje na liczby. Mozna tez parsowac innymi sposobami ale ten jest najprostszy i najszybszy\r\n        }\r\n\r\n        addTransaction(newTransaction)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} placeholder=\"Enter text...\" onChange={typeText} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" value={amount} placeholder=\"Enter amount...\" onChange={typeAmount} />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\n\nimport { GlobalProvider } from './context/GlobalState'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\n\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}